/**
 * Type assertion utilities to help with TypeScript errors
 * Generated by ts-error-fixer.js
 */

/**
 * Assert a value to a specific type
 * @param value The value to assert
 * @returns The value with the asserted type
 */
export function assertType<T>(value): T {
  return value as T;
}

/**
 * Assert a value is not undefined
 * @param value The value to assert
 * @returns The value asserted as non-undefined
 */
export function assertDefined<T>(value: T | undefined): T {
  if (value === undefined) {
    throw new Error('Value is undefined when it should be defined');
  }
  return value;
}

/**
 * Assert an object has a specific property
 * @param obj The object to check
 * @param prop The property to assert
 * @returns The original object, typed with the property
 */
export function assertHasProperty<T, K extends string>(
  obj: T, 
  prop: K
): T & { [key in K]: any } {
  return obj as T & { [key in K]: any };
}
