/**
 * Extended type declarations for Three.js
 * 
 * This file contains type declarations for Three.js modules that might
 * not be included in the standard @types/three package.
 */

declare module 'three/examples/jsm/geometries/TextGeometry' {
  import { ExtrudeGeometryOptions, Font, Geometry, BufferGeometry } from 'three';

  export interface TextGeometryParameters {
    font: Font;
    size?: number;
    height?: number;
    curveSegments?: number;
    bevelEnabled?: boolean;
    bevelThickness?: number;
    bevelSize?: number;
    bevelOffset?: number;
    bevelSegments?: number;
  }

  export class TextGeometry extends ExtrudeGeometry {
    constructor(text: string, parameters: TextGeometryParameters);
  }

  export class TextBufferGeometry extends BufferGeometry {
    constructor(text: string, parameters: TextGeometryParameters);
  }
}

declare module 'three/examples/jsm/loaders/FontLoader' {
  import { Loader, LoadingManager } from 'three';

  export interface FontData {
    glyphs: Record<string, any>;
    familyName: string;
    ascender: number;
    descender: number;
    underlinePosition: number;
    underlineThickness: number;
    boundingBox: {
      yMin: number;
      xMin: number;
      yMax: number;
      xMax: number;
    };
    resolution: number;
    original_font_information: Record<string, any>;
  }

  export class Font {
    constructor(data: FontData);
    data: FontData;
    generateShapes(text: string, size: number): any[];
  }

  export class FontLoader extends Loader {
    constructor(manager?: LoadingManager);
    load(
      url: string,
      onLoad?: (font: Font) => void,
      onProgress?: (event: ProgressEvent) => void,
      onError?: (event: ErrorEvent) => void
    ): void;
    loadAsync(url: string, onProgress?: (event: ProgressEvent) => void): Promise<Font>;
    parse(json$2: Font;
  }
}

// Add declaration for missing icons
declare module 'lucide-react' {
  export const RefreshCw: React.FC<React.SVGProps<SVGSVGElement>>;
  export const Upload: React.FC<React.SVGProps<SVGSVGElement>>;
}
