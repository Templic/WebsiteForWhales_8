{
  "timestamp": "2025-05-28T02:07:31.052Z",
  "systemStatus": "partially_blocked",
  "securityLayers": [
    {
      "name": "CSRF Protection",
      "status": "allowing",
      "configuration": {
        "enabled": false,
        "exemptRoutes": [
          "/api/health",
          "/api/webhooks",
          "/api/external-callbacks",
          "/api/auth/*",
          "/api/jwt/*",
          "/taskade-embed"
        ],
        "note": "CSRF Protection temporarily disabled for Replit Auth integration"
      },
      "potentialIssues": [
        "CSRF completely disabled globally",
        "No double-submit cookie verification",
        "Missing Origin header validation",
        "API endpoints completely unprotected from CSRF"
      ],
      "recommendations": [
        "Re-enable CSRF with smart exemptions",
        "Implement Origin header validation for API calls",
        "Add CSRF token validation for state-changing operations",
        "Keep exemptions only for authentic external integrations"
      ]
    },
    {
      "name": "Content Security Policy",
      "status": "blocking",
      "configuration": {
        "default-src": "'self'",
        "script-src": "'self' 'unsafe-inline' 'unsafe-eval' https://auth.util.repl.co https://www.youtube.com https://js.stripe.com",
        "connect-src": "'self' wss: ws: https://api.stripe.com",
        "frame-src": "'self' https://auth.util.repl.co https://www.youtube.com https://youtube.com https://www.google.com https://*.google.com https://js.stripe.com https://hooks.stripe.com"
      },
      "potentialIssues": [
        "Google APIs (*.googleapis.com) NOT in connect-src",
        "Google Analytics domains missing from script-src",
        "Taskade domains (*.taskade.com) NOT in any CSP directive",
        "Google Fonts/CDN resources blocked",
        "API calls to external services rejected by browser"
      ],
      "recommendations": [
        "Add *.googleapis.com to connect-src for Google API calls",
        "Add www.googletagmanager.com to script-src for Analytics",
        "Add *.taskade.com to connect-src and frame-src",
        "Add fonts.googleapis.com to font-src",
        "Test each API integration endpoint specifically"
      ]
    },
    {
      "name": "CORS Configuration",
      "status": "allowing",
      "configuration": {
        "origin": "config.corsOrigins",
        "credentials": true,
        "note": "Using dynamic origin from config"
      },
      "potentialIssues": [
        "CORS origins might not include all required domains",
        "Credentials enabled could block some API calls",
        "Missing specific handling for preflight OPTIONS requests"
      ],
      "recommendations": [
        "Verify config.corsOrigins includes Google/Taskade domains if needed",
        "Add explicit OPTIONS method handling",
        "Consider separate CORS rules for API vs embedding"
      ]
    },
    {
      "name": "Authentication Middleware",
      "status": "blocking",
      "configuration": {
        "replit_auth": "enabled",
        "session_based": "enabled",
        "jwt_auth": "enabled",
        "consciousness_framework": "enabled"
      },
      "potentialIssues": [
        "Multiple auth systems could conflict",
        "API endpoints might require authentication when they should be public",
        "Consciousness framework adds additional permission layers",
        "Session requirements for client-side API calls"
      ],
      "recommendations": [
        "Create public API routes for Google/Taskade integration",
        "Exempt external API endpoints from authentication",
        "Separate internal vs external API authentication requirements",
        "Review consciousness permission levels for API access"
      ]
    },
    {
      "name": "Request Validation",
      "status": "blocking",
      "configuration": {
        "zod_validation": "strict",
        "api_validation": "enabled",
        "rasp_protection": "active",
        "quantum_encryption": "enabled"
      },
      "potentialIssues": [
        "Strict Zod validation might reject valid API requests",
        "RASP protection could block legitimate external calls",
        "Request body validation conflicts with API payloads",
        "Quantum encryption overhead on API responses"
      ],
      "recommendations": [
        "Create validation exemptions for external API integrations",
        "Add specific schemas for Google/Taskade API formats",
        "Bypass RASP for trusted external services",
        "Optimize encryption for API performance"
      ]
    },
    {
      "name": "API Routing",
      "status": "unknown",
      "configuration": {
        "protected_routes": "most API endpoints require isAuthenticated",
        "admin_routes": "require admin privileges",
        "public_routes": "limited public access",
        "external_integration": "unclear routing for external APIs"
      },
      "potentialIssues": [
        "Google/Taskade API routes might not exist",
        "Existing routes might require authentication inappropriately",
        "Missing route handlers for external service integration",
        "Route middleware stack too restrictive for API calls"
      ],
      "recommendations": [
        "Create dedicated /api/external/* routes for third-party integrations",
        "Add public routes for Google Analytics tracking",
        "Implement Taskade webhook endpoints without auth requirements",
        "Review all route middleware for API compatibility"
      ]
    },
    {
      "name": "Consciousness Security Framework",
      "status": "blocking",
      "configuration": {
        "consciousness_levels": "required for spiritual data access",
        "whale_wisdom_protection": "active",
        "manifestation_privacy": "enabled",
        "sacred_geometry_access": "consciousness-gated"
      },
      "potentialIssues": [
        "Consciousness level requirements block external API access",
        "Spiritual permission system conflicts with technical APIs",
        "External services cannot authenticate with consciousness framework",
        "API calls fail consciousness validation checks"
      ],
      "recommendations": [
        "Create technical API bypass for consciousness requirements",
        "Separate spiritual features from technical integrations",
        "Add external service authentication method",
        "Implement consciousness-exempt routes for APIs"
      ]
    }
  ],
  "apiDiagnoses": [
    {
      "service": "google",
      "blocked": true,
      "blockingLayers": [
        {
          "name": "Content Security Policy",
          "status": "blocking",
          "configuration": {
            "default-src": "'self'",
            "script-src": "'self' 'unsafe-inline' 'unsafe-eval' https://auth.util.repl.co https://www.youtube.com https://js.stripe.com",
            "connect-src": "'self' wss: ws: https://api.stripe.com",
            "frame-src": "'self' https://auth.util.repl.co https://www.youtube.com https://youtube.com https://www.google.com https://*.google.com https://js.stripe.com https://hooks.stripe.com"
          },
          "potentialIssues": [
            "Google APIs (*.googleapis.com) NOT in connect-src",
            "Google Analytics domains missing from script-src",
            "Taskade domains (*.taskade.com) NOT in any CSP directive",
            "Google Fonts/CDN resources blocked",
            "API calls to external services rejected by browser"
          ],
          "recommendations": [
            "Add *.googleapis.com to connect-src for Google API calls",
            "Add www.googletagmanager.com to script-src for Analytics",
            "Add *.taskade.com to connect-src and frame-src",
            "Add fonts.googleapis.com to font-src",
            "Test each API integration endpoint specifically"
          ]
        },
        {
          "name": "Consciousness Security Framework",
          "status": "blocking",
          "configuration": {
            "consciousness_levels": "required for spiritual data access",
            "whale_wisdom_protection": "active",
            "manifestation_privacy": "enabled",
            "sacred_geometry_access": "consciousness-gated"
          },
          "potentialIssues": [
            "Consciousness level requirements block external API access",
            "Spiritual permission system conflicts with technical APIs",
            "External services cannot authenticate with consciousness framework",
            "API calls fail consciousness validation checks"
          ],
          "recommendations": [
            "Create technical API bypass for consciousness requirements",
            "Separate spiritual features from technical integrations",
            "Add external service authentication method",
            "Implement consciousness-exempt routes for APIs"
          ]
        }
      ],
      "allowingLayers": [
        {
          "name": "CSRF Protection",
          "status": "allowing",
          "configuration": {
            "enabled": false,
            "exemptRoutes": [
              "/api/health",
              "/api/webhooks",
              "/api/external-callbacks",
              "/api/auth/*",
              "/api/jwt/*",
              "/taskade-embed"
            ],
            "note": "CSRF Protection temporarily disabled for Replit Auth integration"
          },
          "potentialIssues": [
            "CSRF completely disabled globally",
            "No double-submit cookie verification",
            "Missing Origin header validation",
            "API endpoints completely unprotected from CSRF"
          ],
          "recommendations": [
            "Re-enable CSRF with smart exemptions",
            "Implement Origin header validation for API calls",
            "Add CSRF token validation for state-changing operations",
            "Keep exemptions only for authentic external integrations"
          ]
        }
      ],
      "rootCause": "CSP blocks *.googleapis.com connections and consciousness framework requires authentication",
      "solution": [
        "Add *.googleapis.com to CSP connect-src directive",
        "Add www.googletagmanager.com to CSP script-src",
        "Create public Google API routes that bypass consciousness authentication",
        "Implement Google Analytics without consciousness level requirements"
      ]
    },
    {
      "service": "taskade",
      "blocked": true,
      "blockingLayers": [
        {
          "name": "Content Security Policy",
          "status": "blocking",
          "configuration": {
            "default-src": "'self'",
            "script-src": "'self' 'unsafe-inline' 'unsafe-eval' https://auth.util.repl.co https://www.youtube.com https://js.stripe.com",
            "connect-src": "'self' wss: ws: https://api.stripe.com",
            "frame-src": "'self' https://auth.util.repl.co https://www.youtube.com https://youtube.com https://www.google.com https://*.google.com https://js.stripe.com https://hooks.stripe.com"
          },
          "potentialIssues": [
            "Google APIs (*.googleapis.com) NOT in connect-src",
            "Google Analytics domains missing from script-src",
            "Taskade domains (*.taskade.com) NOT in any CSP directive",
            "Google Fonts/CDN resources blocked",
            "API calls to external services rejected by browser"
          ],
          "recommendations": [
            "Add *.googleapis.com to connect-src for Google API calls",
            "Add www.googletagmanager.com to script-src for Analytics",
            "Add *.taskade.com to connect-src and frame-src",
            "Add fonts.googleapis.com to font-src",
            "Test each API integration endpoint specifically"
          ]
        },
        {
          "name": "Authentication Middleware",
          "status": "blocking",
          "configuration": {
            "replit_auth": "enabled",
            "session_based": "enabled",
            "jwt_auth": "enabled",
            "consciousness_framework": "enabled"
          },
          "potentialIssues": [
            "Multiple auth systems could conflict",
            "API endpoints might require authentication when they should be public",
            "Consciousness framework adds additional permission layers",
            "Session requirements for client-side API calls"
          ],
          "recommendations": [
            "Create public API routes for Google/Taskade integration",
            "Exempt external API endpoints from authentication",
            "Separate internal vs external API authentication requirements",
            "Review consciousness permission levels for API access"
          ]
        },
        {
          "name": "Consciousness Security Framework",
          "status": "blocking",
          "configuration": {
            "consciousness_levels": "required for spiritual data access",
            "whale_wisdom_protection": "active",
            "manifestation_privacy": "enabled",
            "sacred_geometry_access": "consciousness-gated"
          },
          "potentialIssues": [
            "Consciousness level requirements block external API access",
            "Spiritual permission system conflicts with technical APIs",
            "External services cannot authenticate with consciousness framework",
            "API calls fail consciousness validation checks"
          ],
          "recommendations": [
            "Create technical API bypass for consciousness requirements",
            "Separate spiritual features from technical integrations",
            "Add external service authentication method",
            "Implement consciousness-exempt routes for APIs"
          ]
        }
      ],
      "allowingLayers": [
        {
          "name": "CSRF Protection",
          "status": "allowing",
          "configuration": {
            "enabled": false,
            "exemptRoutes": [
              "/api/health",
              "/api/webhooks",
              "/api/external-callbacks",
              "/api/auth/*",
              "/api/jwt/*",
              "/taskade-embed"
            ],
            "note": "CSRF Protection temporarily disabled for Replit Auth integration"
          },
          "potentialIssues": [
            "CSRF completely disabled globally",
            "No double-submit cookie verification",
            "Missing Origin header validation",
            "API endpoints completely unprotected from CSRF"
          ],
          "recommendations": [
            "Re-enable CSRF with smart exemptions",
            "Implement Origin header validation for API calls",
            "Add CSRF token validation for state-changing operations",
            "Keep exemptions only for authentic external integrations"
          ]
        }
      ],
      "rootCause": "CSP missing Taskade domains, authentication required for API routes, consciousness framework blocking",
      "solution": [
        "Add *.taskade.com to CSP connect-src and frame-src directives",
        "Create public Taskade API integration routes",
        "Implement Taskade webhook endpoints without authentication",
        "Bypass consciousness requirements for Taskade technical integration"
      ]
    }
  ],
  "criticalFindings": [
    "🚨 Content Security Policy blocking Google APIs (*.googleapis.com missing from connect-src)",
    "🚨 Content Security Policy blocking Taskade domains (*.taskade.com missing)",
    "🚨 Consciousness Security Framework requiring authentication for technical APIs",
    "🚨 Missing public API routes for external service integration",
    "🚨 Request validation pipeline too strict for external API payloads",
    "⚠️ Multiple authentication systems potentially conflicting",
    "⚠️ CSRF protection completely disabled (security risk)",
    "⚠️ API routing unclear for external service integration"
  ],
  "implementationPlan": [
    "1. IMMEDIATE: Update CSP to allow Google/Taskade domains",
    "2. IMMEDIATE: Create public API routes for external integrations",
    "3. HIGH: Implement consciousness-exempt API authentication",
    "4. HIGH: Add specific validation schemas for external APIs",
    "5. MEDIUM: Re-enable smart CSRF protection with exemptions",
    "6. MEDIUM: Optimize security middleware stack for API performance",
    "7. LOW: Consolidate authentication systems for clarity",
    "8. LOW: Add comprehensive API integration testing"
  ]
}